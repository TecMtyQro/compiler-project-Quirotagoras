
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESS_THANMORE_THANLESS_EQUALMORE_EQUALrightNOTleftPLUSMINUSleftTIMESDIVIDEMODULEleftPOWERleftEQUALSNOT_EQUALrightASSIGNleftANDleftORrightMINUS_ASSIGNPLUS_ASSIGNASSIGN_MODULEDIVIDE_ASSIGNTIMES_ASSIGNleftCOMAAND APOSTROPHE ARRAY ASSIGN ASSIGN_MODULE BOOL_FALSE BOOL_TRUE BREAK CDEF CHAR COMA COMMENT_LINE DEF DIVIDE DIVIDE_ASSIGN DOT DOUBLE DOUBLEAPOSTROPHE ELIF ELSE EQUALS FLOAT FLOAT_NUMBER FOR ID IF IN INDENT INPUT INT IS IS_NOT LBRACKET LCORCHETE LESS_EQUAL LESS_THAN LIST LONG LPAREN MINUS MINUS_ASSIGN MODULE MORE_EQUAL MORE_THAN NEWLINE NONE NOT NOT_EQUAL NOT_IN NUMBER OR PLUS PLUS_ASSIGN POWER PRINT RANGE RBRACKET RCORCHETE RETURN RPAREN SHORT STRING THEN TIMES TIMES_ASSIGN\n            file_input : stmt file_inputhelp\n\n\n        \n            file_inputhelp : file_input\n                        | empty\n        \n        stmt : simple_stmt\n            | compound_stmt\n\n\n\n    \n\n        simple_stmt : small_stmt simplehelper\n\n\n\n    \n        simplehelper : NEWLINE small_stmt simplehelper\n                    | empty\n\n    \n        small_stmt : expr_stmt\n                    | print_stmt\n                    | input_stmt\n    \n        print_stmt : PRINT LPAREN test RPAREN\n\n\n    \n        input_stmt : test ASSIGN INPUT LPAREN STRING RPAREN\n\n    \n        expr_stmt : typotest\n                    | augassign\n                    | annassign\n\n    \n        typotest : CDEF vartypes\n\n    \n        vartypes : INT test ASSIGN test\n                | DOUBLE test ASSIGN test\n                | SHORT test ASSIGN test\n                | LONG test ASSIGN test\n                | CHAR test ASSIGN test\n                | FLOAT test ASSIGN test\n\n\n    \n        annassign : test ASSIGN test\n\n    \n\n        augassign : test PLUS_ASSIGN test\n                | test MINUS_ASSIGN test\n                | test TIMES_ASSIGN test\n                | test DIVIDE_ASSIGN test\n                | test ASSIGN_MODULE test\n\n\n    \n        compound_stmt : if_stmnt\n                    | for_stmt\n                    | break_stmt\n\n\n    \n        break_stmt : BREAK\n    \n        if_stmnt : IF test THEN suite NEWLINE\n                | compound_if\n\n    \n    compound_if : IF test THEN itersuite elif_stmnt else_stmnt\n                    | IF test THEN itersuite if_stmnt else_stmnt\n\n    \n        itersuite : suite itersuite\n                | suite elif_stmnt\n\n    \n        else_stmnt : ELSE THEN suite\n                    | ELSE THEN if_stmnt\n                    | empty\n\n    \n        elif_stmnt : ELIF test THEN suite elif_stmnt\n                    | else_stmnt\n\n    \n        for_stmt : FOR exprlist IN testlist THEN stmt\n                | FOR exprlist IN RANGE  THEN stmt\n\n\n    \n        exprlist : expression exprlisthelper\n\n\n    \n        exprlisthelper : NEWLINE expression exprlisthelper\n                        | empty\n\n    \n\n        testlist : test testlisthelper\n    \n        testlisthelper : NEWLINE test exprlisthelper\n                        | empty\n\n    \n        suite : simple_stmt\n                | NEWLINE INDENT stmt\n\n    \n        test : or_test\n\n\n    \n        or_test : and_test or_comp\n\n    \n        or_comp : OR and_test or_comp\n                | empty\n\n    \n        and_test : not_test and_comp\n\n    \n        and_comp : AND not_test and_comp\n                | empty\n\n    \n        not_test : NOT not_test\n                | comparison\n\n    \n        comparison :  expression comphelper\n\n    \n\n        comphelper :  comp_op expression comphelper\n                    | empty\n\n    \n        comp_op : LESS_THAN\n                | MORE_THAN\n                | EQUALS\n                | MORE_EQUAL\n                | LESS_EQUAL\n                | NOT_EQUAL\n                | IN\n                | NOT_IN\n                | IS\n                | IS_NOT\n\n    \n        expression : arith_expr\n\n    \n        arith_expr : term PLUS arith_expr\n                    | term MINUS arith_expr\n                    | term empty\n\n\n    \n        term : factor TIMES  term\n            | factor DIVIDE  term\n            | factor MODULE  term\n            | factor empty\n\n    \n        factor :  LPAREN MINUS factor RPAREN\n                | power\n\n    \n        power : factor POWER factor\n                | atom_expr empty\n\n\n    \n        atom_expr : atom\n    \n        atom : ID\n            | NUMBER\n            | STRING\n            | BOOL_TRUE\n            | BOOL_FALSE\n            | NONE\n\n\n    empty :'
    
_lr_action_items = {'IF':([0,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,44,46,58,65,67,68,70,71,72,74,87,91,93,94,96,98,99,100,101,102,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,142,143,144,145,146,147,148,150,152,153,154,155,157,158,163,164,165,166,167,168,170,171,172,173,174,175,176,179,180,182,183,],[12,12,-4,-5,-96,-30,-31,-32,-9,-10,-11,-35,-33,-14,-15,-16,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,-8,-17,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,-24,-25,-26,-27,-28,-29,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,-96,12,-53,-12,-85,-57,-60,-65,-96,-34,-38,-39,-44,-42,12,-96,-96,12,12,-18,-19,-20,-21,-22,-23,12,-54,-36,-37,-13,-45,-46,-40,-41,-96,-43,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,44,46,58,65,67,68,70,71,72,74,87,91,93,94,96,98,99,100,101,102,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,142,143,144,145,146,147,148,150,152,153,154,155,157,158,163,164,165,166,167,168,171,172,173,174,175,176,179,180,182,183,],[15,15,-4,-5,-96,-30,-31,-32,-9,-10,-11,-35,-33,-14,-15,-16,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,-8,-17,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,-24,-25,-26,-27,-28,-29,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,-96,-96,-53,-12,-85,-57,-60,-65,-96,-34,-38,-39,-44,-42,15,-96,-96,15,15,-18,-19,-20,-21,-22,-23,-54,-36,-37,-13,-45,-46,-40,-41,-96,-43,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,44,46,58,65,67,68,70,71,72,74,87,91,93,94,96,98,99,100,101,102,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,142,143,144,145,146,147,148,150,152,153,154,155,157,158,163,164,165,166,167,168,171,172,173,174,175,176,179,180,182,183,],[16,16,-4,-5,-96,-30,-31,-32,-9,-10,-11,-35,-33,-14,-15,-16,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,-8,-17,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,-24,-25,-26,-27,-28,-29,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,-96,-96,-53,-12,-85,-57,-60,-65,-96,-34,-38,-39,-44,-42,16,-96,-96,16,16,-18,-19,-20,-21,-22,-23,-54,-36,-37,-13,-45,-46,-40,-41,-96,-43,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,58,65,67,68,70,71,72,74,87,91,93,94,95,96,98,99,100,101,102,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,142,143,144,145,146,147,148,150,152,153,154,155,157,158,163,164,165,166,167,168,170,171,172,173,174,175,176,178,179,180,182,183,],[20,20,-4,-5,-96,-30,-31,-32,-9,-10,-11,-35,-33,-14,-15,-16,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,20,-8,-17,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,20,-24,-25,-26,-27,-28,-29,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,20,-96,-53,-12,-85,-57,-60,-65,20,-34,-38,-39,-44,-42,20,-96,-96,20,20,-18,-19,-20,-21,-22,-23,20,-54,-36,-37,-13,-45,-46,20,-40,-41,-96,-43,]),'CDEF':([0,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,58,65,67,68,70,71,72,74,87,91,93,94,95,96,98,99,100,101,102,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,142,143,144,145,146,147,148,150,152,153,154,155,157,158,163,164,165,166,167,168,170,171,172,173,174,175,176,178,179,180,182,183,],[23,23,-4,-5,-96,-30,-31,-32,-9,-10,-11,-35,-33,-14,-15,-16,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,23,-8,-17,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,23,-24,-25,-26,-27,-28,-29,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,23,-96,-53,-12,-85,-57,-60,-65,23,-34,-38,-39,-44,-42,23,-96,-96,23,23,-18,-19,-20,-21,-22,-23,23,-54,-36,-37,-13,-45,-46,23,-40,-41,-96,-43,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,48,49,50,51,52,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,87,91,93,94,95,96,98,99,100,101,102,103,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,157,158,160,163,164,165,166,167,168,170,171,172,173,174,175,176,178,179,180,182,183,],[27,27,-4,-5,-96,-30,-31,-32,-9,-10,-11,27,-35,-33,-14,-15,-16,-92,-55,-96,-96,27,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,27,-8,27,27,27,27,27,27,27,-17,27,27,27,27,27,27,-56,27,-58,-59,27,-61,-62,-64,-66,-80,-84,-88,-96,27,-24,-25,-26,-27,-28,-29,27,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,27,-96,-53,-12,-85,27,27,27,27,27,27,-57,-60,-65,27,-34,-38,-39,27,-44,-42,27,-96,-96,27,27,27,-18,-19,-20,-21,-22,-23,27,-54,-36,-37,-13,-45,-46,27,-40,-41,-96,-43,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,157,158,160,163,164,165,166,167,168,170,171,172,173,174,175,176,178,179,180,182,183,],[21,21,-4,-5,-96,-30,-31,-32,-9,-10,-11,21,-35,21,-33,-14,-15,-16,56,-92,-55,-96,-96,21,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,21,-8,21,21,21,21,21,21,21,21,-17,21,21,21,21,21,21,-56,21,-58,-59,21,-61,-62,-64,21,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,21,21,-80,21,21,21,-84,21,-88,-96,21,-24,129,-25,-26,-27,-28,-29,21,21,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,21,-96,-53,-12,-85,21,21,21,21,21,21,-57,-60,-65,21,-34,-38,-39,21,-44,-42,21,-96,-96,21,21,21,-18,-19,-20,-21,-22,-23,21,-54,-36,-37,-13,-45,-46,21,-40,-41,-96,-43,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,157,158,160,163,164,165,166,167,168,170,171,172,173,174,175,176,178,179,180,182,183,],[36,36,-4,-5,-96,-30,-31,-32,-9,-10,-11,36,-35,36,-33,-14,-15,-16,-92,-55,-96,-96,36,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,36,-8,36,36,36,36,36,36,36,36,-17,36,36,36,36,36,36,-56,36,-58,-59,36,-61,-62,-64,36,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,36,36,-80,36,36,36,-84,36,-88,-96,36,-24,-25,-26,-27,-28,-29,36,36,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,36,-96,-53,-12,-85,36,36,36,36,36,36,-57,-60,-65,36,-34,-38,-39,36,-44,-42,36,-96,-96,36,36,36,-18,-19,-20,-21,-22,-23,36,-54,-36,-37,-13,-45,-46,36,-40,-41,-96,-43,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,157,158,160,163,164,165,166,167,168,170,171,172,173,174,175,176,178,179,180,182,183,],[37,37,-4,-5,-96,-30,-31,-32,-9,-10,-11,37,-35,37,-33,-14,-15,-16,-92,-55,-96,-96,37,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,37,-8,37,37,37,37,37,37,37,37,-17,37,37,37,37,37,37,-56,37,-58,-59,37,-61,-62,-64,37,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,37,37,-80,37,37,37,-84,37,-88,-96,37,-24,-25,-26,-27,-28,-29,37,37,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,37,-96,-53,-12,-85,37,37,37,37,37,37,-57,-60,-65,37,-34,-38,-39,37,-44,-42,37,-96,-96,37,37,37,-18,-19,-20,-21,-22,-23,37,-54,-36,-37,-13,-45,-46,37,-40,-41,-96,-43,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,115,116,117,118,119,120,121,122,123,124,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,157,158,160,163,164,165,166,167,168,170,171,172,173,174,175,176,178,179,180,182,183,],[22,22,-4,-5,-96,-30,-31,-32,-9,-10,-11,22,-35,22,-33,-14,-15,-16,-92,-55,-96,-96,22,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,22,-8,22,22,22,22,22,22,22,22,-17,22,22,22,22,22,22,-56,22,-58,-59,22,-61,-62,-64,22,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,22,22,-80,22,22,22,-84,22,-88,-96,22,-24,-25,-26,-27,-28,-29,22,22,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,22,-96,-53,156,-12,-85,22,22,22,22,22,22,-57,-60,-65,22,-34,-38,-39,22,-44,-42,22,-96,-96,22,22,22,-18,-19,-20,-21,-22,-23,22,-54,-36,-37,-13,-45,-46,22,-40,-41,-96,-43,]),'BOOL_TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,157,158,160,163,164,165,166,167,168,170,171,172,173,174,175,176,178,179,180,182,183,],[38,38,-4,-5,-96,-30,-31,-32,-9,-10,-11,38,-35,38,-33,-14,-15,-16,-92,-55,-96,-96,38,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,38,-8,38,38,38,38,38,38,38,38,-17,38,38,38,38,38,38,-56,38,-58,-59,38,-61,-62,-64,38,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,38,38,-80,38,38,38,-84,38,-88,-96,38,-24,-25,-26,-27,-28,-29,38,38,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,38,-96,-53,-12,-85,38,38,38,38,38,38,-57,-60,-65,38,-34,-38,-39,38,-44,-42,38,-96,-96,38,38,38,-18,-19,-20,-21,-22,-23,38,-54,-36,-37,-13,-45,-46,38,-40,-41,-96,-43,]),'BOOL_FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,157,158,160,163,164,165,166,167,168,170,171,172,173,174,175,176,178,179,180,182,183,],[39,39,-4,-5,-96,-30,-31,-32,-9,-10,-11,39,-35,39,-33,-14,-15,-16,-92,-55,-96,-96,39,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,39,-8,39,39,39,39,39,39,39,39,-17,39,39,39,39,39,39,-56,39,-58,-59,39,-61,-62,-64,39,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,39,39,-80,39,39,39,-84,39,-88,-96,39,-24,-25,-26,-27,-28,-29,39,39,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,39,-96,-53,-12,-85,39,39,39,39,39,39,-57,-60,-65,39,-34,-38,-39,39,-44,-42,39,-96,-96,39,39,39,-18,-19,-20,-21,-22,-23,39,-54,-36,-37,-13,-45,-46,39,-40,-41,-96,-43,]),'NONE':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,157,158,160,163,164,165,166,167,168,170,171,172,173,174,175,176,178,179,180,182,183,],[40,40,-4,-5,-96,-30,-31,-32,-9,-10,-11,40,-35,40,-33,-14,-15,-16,-92,-55,-96,-96,40,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,40,-8,40,40,40,40,40,40,40,40,-17,40,40,40,40,40,40,-56,40,-58,-59,40,-61,-62,-64,40,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,40,40,-80,40,40,40,-84,40,-88,-96,40,-24,-25,-26,-27,-28,-29,40,40,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,40,-96,-53,-12,-85,40,40,40,40,40,40,-57,-60,-65,40,-34,-38,-39,40,-44,-42,40,-96,-96,40,40,40,-18,-19,-20,-21,-22,-23,40,-54,-36,-37,-13,-45,-46,40,-40,-41,-96,-43,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,58,65,67,68,70,71,72,74,87,91,93,94,96,98,99,100,101,102,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,142,143,144,145,146,147,148,150,152,154,155,163,164,165,166,167,168,171,172,173,174,175,176,179,180,182,183,],[0,-96,-4,-5,-96,-30,-31,-32,-9,-10,-11,-35,-33,-14,-15,-16,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-1,-2,-3,-6,-8,-17,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,-24,-25,-26,-27,-28,-29,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,-96,-96,-53,-12,-85,-57,-60,-65,-96,-34,-38,-39,-44,-42,-96,-96,-18,-19,-20,-21,-22,-23,-54,-36,-37,-13,-45,-46,-40,-41,-96,-43,]),'NEWLINE':([3,4,5,6,7,8,9,10,11,14,16,17,18,19,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,44,46,55,58,65,67,68,70,71,72,74,87,91,93,94,95,96,98,99,100,101,102,115,116,117,118,119,120,121,122,123,124,125,127,128,132,133,134,135,142,143,144,145,146,147,148,150,152,154,155,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,182,183,],[-4,-5,45,-30,-31,-32,-9,-10,-11,-35,-33,-14,-15,-16,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,-8,105,-17,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,45,126,-24,-25,-26,-27,-28,-29,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,146,-96,-53,160,105,-12,-85,-57,-60,-65,126,-34,-38,-39,-44,-42,-96,-96,-18,-19,-20,-21,-22,-23,126,-54,-36,-37,-13,-45,-46,105,126,-40,-41,-96,-43,]),'ELIF':([3,4,5,6,7,8,9,10,11,14,16,17,18,19,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,44,46,58,65,67,68,70,71,72,74,87,91,93,94,96,98,99,100,101,102,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,142,143,144,145,146,147,148,150,152,154,155,163,164,165,166,167,168,171,172,173,174,175,176,179,180,182,183,],[-4,-5,-96,-30,-31,-32,-9,-10,-11,-35,-33,-14,-15,-16,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,-8,-17,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,-24,-25,-26,-27,-28,-29,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,149,149,-53,-12,-85,-57,-60,-65,149,-34,-38,-39,-44,-42,-96,-96,-18,-19,-20,-21,-22,-23,-54,-36,-37,-13,-45,-46,-40,-41,149,-43,]),'ELSE':([3,4,5,6,7,8,9,10,11,14,16,17,18,19,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,44,46,58,65,67,68,70,71,72,74,87,91,93,94,96,98,99,100,101,102,115,116,117,118,119,120,121,122,123,124,125,127,128,134,135,142,143,144,145,146,147,148,150,152,154,155,163,164,165,166,167,168,171,172,173,174,175,176,179,180,182,183,],[-4,-5,-96,-30,-31,-32,-9,-10,-11,-35,-33,-14,-15,-16,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-6,-8,-17,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,-24,-25,-26,-27,-28,-29,-96,-96,-96,-78,-79,-81,-82,-83,-87,-7,151,151,-53,-12,-85,-57,-60,-65,151,-34,-38,-39,-44,-42,151,151,-18,-19,-20,-21,-22,-23,-54,-36,-37,-13,-45,-46,-40,-41,151,-43,]),'ASSIGN':([13,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,65,67,68,70,71,72,74,87,91,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,135,142,143,144,],[48,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,136,137,138,139,140,141,-96,-96,-96,-78,-79,-81,-82,-83,-87,-85,-57,-60,-65,]),'PLUS_ASSIGN':([13,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,65,67,68,70,71,72,74,87,91,93,115,116,117,118,119,120,121,122,123,135,142,143,144,],[49,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,-96,-96,-78,-79,-81,-82,-83,-87,-85,-57,-60,-65,]),'MINUS_ASSIGN':([13,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,65,67,68,70,71,72,74,87,91,93,115,116,117,118,119,120,121,122,123,135,142,143,144,],[50,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,-96,-96,-78,-79,-81,-82,-83,-87,-85,-57,-60,-65,]),'TIMES_ASSIGN':([13,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,65,67,68,70,71,72,74,87,91,93,115,116,117,118,119,120,121,122,123,135,142,143,144,],[51,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,-96,-96,-78,-79,-81,-82,-83,-87,-85,-57,-60,-65,]),'DIVIDE_ASSIGN':([13,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,65,67,68,70,71,72,74,87,91,93,115,116,117,118,119,120,121,122,123,135,142,143,144,],[52,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,-96,-96,-78,-79,-81,-82,-83,-87,-85,-57,-60,-65,]),'ASSIGN_MODULE':([13,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,65,67,68,70,71,72,74,87,91,93,115,116,117,118,119,120,121,122,123,135,142,143,144,],[53,-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-96,-96,-96,-78,-79,-81,-82,-83,-87,-85,-57,-60,-65,]),'MINUS':([21,22,31,32,33,34,35,36,37,38,39,40,91,93,120,121,122,123,135,],[57,-92,86,-96,-86,-96,-89,-90,-91,-93,-94,-95,-84,-88,-81,-82,-83,-87,-85,]),'TIMES':([22,32,33,34,35,36,37,38,39,40,93,123,135,],[-92,88,-86,-96,-89,-90,-91,-93,-94,-95,-88,-87,-85,]),'DIVIDE':([22,32,33,34,35,36,37,38,39,40,93,123,135,],[-92,89,-86,-96,-89,-90,-91,-93,-94,-95,-88,-87,-85,]),'MODULE':([22,32,33,34,35,36,37,38,39,40,93,123,135,],[-92,90,-86,-96,-89,-90,-91,-93,-94,-95,-88,-87,-85,]),'POWER':([22,32,33,34,35,36,37,38,39,40,93,108,123,135,],[-92,92,-86,-96,-89,-90,-91,-93,-94,-95,-88,92,-87,-85,]),'PLUS':([22,31,32,33,34,35,36,37,38,39,40,91,93,120,121,122,123,135,],[-92,85,-96,-86,-96,-89,-90,-91,-93,-94,-95,-84,-88,-81,-82,-83,-87,-85,]),'LESS_THAN':([22,29,30,31,32,33,34,35,36,37,38,39,40,87,91,93,117,118,119,120,121,122,123,135,],[-92,75,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-80,-84,-88,75,-78,-79,-81,-82,-83,-87,-85,]),'MORE_THAN':([22,29,30,31,32,33,34,35,36,37,38,39,40,87,91,93,117,118,119,120,121,122,123,135,],[-92,76,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-80,-84,-88,76,-78,-79,-81,-82,-83,-87,-85,]),'EQUALS':([22,29,30,31,32,33,34,35,36,37,38,39,40,87,91,93,117,118,119,120,121,122,123,135,],[-92,77,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-80,-84,-88,77,-78,-79,-81,-82,-83,-87,-85,]),'MORE_EQUAL':([22,29,30,31,32,33,34,35,36,37,38,39,40,87,91,93,117,118,119,120,121,122,123,135,],[-92,78,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-80,-84,-88,78,-78,-79,-81,-82,-83,-87,-85,]),'LESS_EQUAL':([22,29,30,31,32,33,34,35,36,37,38,39,40,87,91,93,117,118,119,120,121,122,123,135,],[-92,79,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-80,-84,-88,79,-78,-79,-81,-82,-83,-87,-85,]),'NOT_EQUAL':([22,29,30,31,32,33,34,35,36,37,38,39,40,87,91,93,117,118,119,120,121,122,123,135,],[-92,80,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-80,-84,-88,80,-78,-79,-81,-82,-83,-87,-85,]),'IN':([22,29,30,31,32,33,34,35,36,37,38,39,40,54,55,87,91,93,104,106,117,118,119,120,121,122,123,133,135,162,],[-92,81,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,103,-96,-80,-84,-88,-47,-49,81,-78,-79,-81,-82,-83,-87,-96,-85,-48,]),'NOT_IN':([22,29,30,31,32,33,34,35,36,37,38,39,40,87,91,93,117,118,119,120,121,122,123,135,],[-92,82,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-80,-84,-88,82,-78,-79,-81,-82,-83,-87,-85,]),'IS':([22,29,30,31,32,33,34,35,36,37,38,39,40,87,91,93,117,118,119,120,121,122,123,135,],[-92,83,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-80,-84,-88,83,-78,-79,-81,-82,-83,-87,-85,]),'IS_NOT':([22,29,30,31,32,33,34,35,36,37,38,39,40,87,91,93,117,118,119,120,121,122,123,135,],[-92,84,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-80,-84,-88,84,-78,-79,-81,-82,-83,-87,-85,]),'AND':([22,26,28,29,30,31,32,33,34,35,36,37,38,39,40,71,72,74,87,91,93,116,117,118,119,120,121,122,123,135,144,],[-92,69,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-62,-64,-66,-80,-84,-88,69,-96,-78,-79,-81,-82,-83,-87,-85,-65,]),'OR':([22,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,68,70,71,72,74,87,91,93,115,116,117,118,119,120,121,122,123,135,143,144,],[-92,66,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-59,-61,-62,-64,-66,-80,-84,-88,66,-96,-96,-78,-79,-81,-82,-83,-87,-85,-60,-65,]),'THEN':([22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,47,65,67,68,70,71,72,74,87,91,93,106,115,116,117,118,119,120,121,122,123,130,131,132,133,135,142,143,144,151,159,161,162,169,177,181,],[-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,95,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,-49,-96,-96,-96,-78,-79,-81,-82,-83,-87,157,158,-96,-96,-85,-57,-60,-65,170,-50,-52,-48,178,-96,-51,]),'RPAREN':([22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,65,67,68,70,71,72,74,87,91,93,107,108,115,116,117,118,119,120,121,122,123,135,142,143,144,156,],[-92,-55,-96,-96,-63,-96,-77,-96,-96,-86,-96,-89,-90,-91,-93,-94,-95,-56,-58,-59,-61,-62,-64,-66,-80,-84,-88,134,135,-96,-96,-96,-78,-79,-81,-82,-83,-87,-85,-57,-60,-65,174,]),'INT':([23,],[59,]),'DOUBLE':([23,],[60,]),'SHORT':([23,],[61,]),'LONG':([23,],[62,]),'CHAR':([23,],[63,]),'FLOAT':([23,],[64,]),'INPUT':([48,],[97,]),'RANGE':([103,],[131,]),'INDENT':([126,146,],[153,153,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file_input':([0,2,],[1,42,]),'stmt':([0,2,153,157,158,],[2,2,171,175,176,]),'simple_stmt':([0,2,95,125,145,153,157,158,170,178,],[3,3,128,128,128,3,3,3,128,128,]),'compound_stmt':([0,2,153,157,158,],[4,4,4,4,4,]),'small_stmt':([0,2,45,95,125,145,153,157,158,170,178,],[5,5,94,5,5,5,5,5,5,5,5,]),'if_stmnt':([0,2,127,153,157,158,170,],[6,6,155,6,6,6,180,]),'for_stmt':([0,2,153,157,158,],[7,7,7,7,7,]),'break_stmt':([0,2,153,157,158,],[8,8,8,8,8,]),'expr_stmt':([0,2,45,95,125,145,153,157,158,170,178,],[9,9,9,9,9,9,9,9,9,9,9,]),'print_stmt':([0,2,45,95,125,145,153,157,158,170,178,],[10,10,10,10,10,10,10,10,10,10,10,]),'input_stmt':([0,2,45,95,125,145,153,157,158,170,178,],[11,11,11,11,11,11,11,11,11,11,11,]),'test':([0,2,12,45,48,49,50,51,52,53,56,59,60,61,62,63,64,95,103,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[13,13,47,13,96,98,99,100,101,102,107,109,110,111,112,113,114,13,132,13,163,164,165,166,167,168,13,169,13,13,13,177,13,13,]),'compound_if':([0,2,127,153,157,158,170,],[14,14,14,14,14,14,14,]),'typotest':([0,2,45,95,125,145,153,157,158,170,178,],[17,17,17,17,17,17,17,17,17,17,17,]),'augassign':([0,2,45,95,125,145,153,157,158,170,178,],[18,18,18,18,18,18,18,18,18,18,18,]),'annassign':([0,2,45,95,125,145,153,157,158,170,178,],[19,19,19,19,19,19,19,19,19,19,19,]),'or_test':([0,2,12,45,48,49,50,51,52,53,56,59,60,61,62,63,64,95,103,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'and_test':([0,2,12,45,48,49,50,51,52,53,56,59,60,61,62,63,64,66,95,103,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,115,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'not_test':([0,2,12,27,45,48,49,50,51,52,53,56,59,60,61,62,63,64,66,69,95,103,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[26,26,26,71,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,116,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'comparison':([0,2,12,27,45,48,49,50,51,52,53,56,59,60,61,62,63,64,66,69,95,103,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'expression':([0,2,12,15,27,45,48,49,50,51,52,53,56,59,60,61,62,63,64,66,69,73,95,103,105,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[29,29,29,55,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,117,29,29,133,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'arith_expr':([0,2,12,15,27,45,48,49,50,51,52,53,56,59,60,61,62,63,64,66,69,73,85,86,95,103,105,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,118,119,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'term':([0,2,12,15,27,45,48,49,50,51,52,53,56,59,60,61,62,63,64,66,69,73,85,86,88,89,90,95,103,105,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,120,121,122,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'factor':([0,2,12,15,27,45,48,49,50,51,52,53,56,57,59,60,61,62,63,64,66,69,73,85,86,88,89,90,92,95,103,105,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[32,32,32,32,32,32,32,32,32,32,32,32,32,108,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'power':([0,2,12,15,27,45,48,49,50,51,52,53,56,57,59,60,61,62,63,64,66,69,73,85,86,88,89,90,92,95,103,105,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'atom_expr':([0,2,12,15,27,45,48,49,50,51,52,53,56,57,59,60,61,62,63,64,66,69,73,85,86,88,89,90,92,95,103,105,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'atom':([0,2,12,15,27,45,48,49,50,51,52,53,56,57,59,60,61,62,63,64,66,69,73,85,86,88,89,90,92,95,103,105,125,136,137,138,139,140,141,145,149,153,157,158,160,170,178,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'file_inputhelp':([2,],[41,]),'empty':([2,5,25,26,29,31,32,34,55,94,115,116,117,125,127,132,133,145,154,155,177,182,],[43,46,67,70,74,87,91,93,106,46,67,70,74,152,152,161,106,152,152,152,106,152,]),'simplehelper':([5,94,],[44,124,]),'exprlist':([15,],[54,]),'vartypes':([23,],[58,]),'or_comp':([25,115,],[65,142,]),'and_comp':([26,116,],[68,143,]),'comphelper':([29,117,],[72,144,]),'comp_op':([29,117,],[73,73,]),'exprlisthelper':([55,133,177,],[104,162,181,]),'suite':([95,125,145,170,178,],[125,145,145,179,182,]),'itersuite':([95,125,145,],[127,147,147,]),'testlist':([103,],[130,]),'elif_stmnt':([125,127,145,182,],[148,154,148,183,]),'else_stmnt':([125,127,145,154,155,182,],[150,150,150,172,173,150,]),'testlisthelper':([132,],[159,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file_input","S'",1,None,None,None),
  ('file_input -> stmt file_inputhelp','file_input',2,'p_file_input','CythonParser.py',35),
  ('file_inputhelp -> file_input','file_inputhelp',1,'p_file_inputhelp','CythonParser.py',44),
  ('file_inputhelp -> empty','file_inputhelp',1,'p_file_inputhelp','CythonParser.py',45),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','CythonParser.py',54),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','CythonParser.py',55),
  ('simple_stmt -> small_stmt simplehelper','simple_stmt',2,'p_simple_stmt','CythonParser.py',70),
  ('simplehelper -> NEWLINE small_stmt simplehelper','simplehelper',3,'p_simplehelper','CythonParser.py',81),
  ('simplehelper -> empty','simplehelper',1,'p_simplehelper','CythonParser.py',82),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','CythonParser.py',96),
  ('small_stmt -> print_stmt','small_stmt',1,'p_small_stmt','CythonParser.py',97),
  ('small_stmt -> input_stmt','small_stmt',1,'p_small_stmt','CythonParser.py',98),
  ('print_stmt -> PRINT LPAREN test RPAREN','print_stmt',4,'p_print_stmt','CythonParser.py',105),
  ('input_stmt -> test ASSIGN INPUT LPAREN STRING RPAREN','input_stmt',6,'p_input_stmt','CythonParser.py',114),
  ('expr_stmt -> typotest','expr_stmt',1,'p_expr_stmt','CythonParser.py',125),
  ('expr_stmt -> augassign','expr_stmt',1,'p_expr_stmt','CythonParser.py',126),
  ('expr_stmt -> annassign','expr_stmt',1,'p_expr_stmt','CythonParser.py',127),
  ('typotest -> CDEF vartypes','typotest',2,'p_typotest','CythonParser.py',134),
  ('vartypes -> INT test ASSIGN test','vartypes',4,'p_vartypes','CythonParser.py',148),
  ('vartypes -> DOUBLE test ASSIGN test','vartypes',4,'p_vartypes','CythonParser.py',149),
  ('vartypes -> SHORT test ASSIGN test','vartypes',4,'p_vartypes','CythonParser.py',150),
  ('vartypes -> LONG test ASSIGN test','vartypes',4,'p_vartypes','CythonParser.py',151),
  ('vartypes -> CHAR test ASSIGN test','vartypes',4,'p_vartypes','CythonParser.py',152),
  ('vartypes -> FLOAT test ASSIGN test','vartypes',4,'p_vartypes','CythonParser.py',153),
  ('annassign -> test ASSIGN test','annassign',3,'p_annasign','CythonParser.py',169),
  ('augassign -> test PLUS_ASSIGN test','augassign',3,'p_augassign','CythonParser.py',181),
  ('augassign -> test MINUS_ASSIGN test','augassign',3,'p_augassign','CythonParser.py',182),
  ('augassign -> test TIMES_ASSIGN test','augassign',3,'p_augassign','CythonParser.py',183),
  ('augassign -> test DIVIDE_ASSIGN test','augassign',3,'p_augassign','CythonParser.py',184),
  ('augassign -> test ASSIGN_MODULE test','augassign',3,'p_augassign','CythonParser.py',185),
  ('compound_stmt -> if_stmnt','compound_stmt',1,'p_compound_stmt','CythonParser.py',202),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','CythonParser.py',203),
  ('compound_stmt -> break_stmt','compound_stmt',1,'p_compound_stmt','CythonParser.py',204),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','CythonParser.py',214),
  ('if_stmnt -> IF test THEN suite NEWLINE','if_stmnt',5,'p_if_stmnt','CythonParser.py',220),
  ('if_stmnt -> compound_if','if_stmnt',1,'p_if_stmnt','CythonParser.py',221),
  ('compound_if -> IF test THEN itersuite elif_stmnt else_stmnt','compound_if',6,'p_compound_if','CythonParser.py',232),
  ('compound_if -> IF test THEN itersuite if_stmnt else_stmnt','compound_if',6,'p_compound_if','CythonParser.py',233),
  ('itersuite -> suite itersuite','itersuite',2,'p_itersuite','CythonParser.py',244),
  ('itersuite -> suite elif_stmnt','itersuite',2,'p_itersuite','CythonParser.py',245),
  ('else_stmnt -> ELSE THEN suite','else_stmnt',3,'p_else_stmnt','CythonParser.py',254),
  ('else_stmnt -> ELSE THEN if_stmnt','else_stmnt',3,'p_else_stmnt','CythonParser.py',255),
  ('else_stmnt -> empty','else_stmnt',1,'p_else_stmnt','CythonParser.py',256),
  ('elif_stmnt -> ELIF test THEN suite elif_stmnt','elif_stmnt',5,'p_elif','CythonParser.py',267),
  ('elif_stmnt -> else_stmnt','elif_stmnt',1,'p_elif','CythonParser.py',268),
  ('for_stmt -> FOR exprlist IN testlist THEN stmt','for_stmt',6,'p_for_stmt','CythonParser.py',283),
  ('for_stmt -> FOR exprlist IN RANGE THEN stmt','for_stmt',6,'p_for_stmt','CythonParser.py',284),
  ('exprlist -> expression exprlisthelper','exprlist',2,'p_exprlist','CythonParser.py',295),
  ('exprlisthelper -> NEWLINE expression exprlisthelper','exprlisthelper',3,'p_exprlisthelper','CythonParser.py',304),
  ('exprlisthelper -> empty','exprlisthelper',1,'p_exprlisthelper','CythonParser.py',305),
  ('testlist -> test testlisthelper','testlist',2,'p_testlist','CythonParser.py',320),
  ('testlisthelper -> NEWLINE test exprlisthelper','testlisthelper',3,'p_testlisthelper','CythonParser.py',326),
  ('testlisthelper -> empty','testlisthelper',1,'p_testlisthelper','CythonParser.py',327),
  ('suite -> simple_stmt','suite',1,'p_suite','CythonParser.py',350),
  ('suite -> NEWLINE INDENT stmt','suite',3,'p_suite','CythonParser.py',351),
  ('test -> or_test','test',1,'p_test','CythonParser.py',372),
  ('or_test -> and_test or_comp','or_test',2,'p_or_test','CythonParser.py',384),
  ('or_comp -> OR and_test or_comp','or_comp',3,'p_or_comp','CythonParser.py',391),
  ('or_comp -> empty','or_comp',1,'p_or_comp','CythonParser.py',392),
  ('and_test -> not_test and_comp','and_test',2,'p_and_test','CythonParser.py',404),
  ('and_comp -> AND not_test and_comp','and_comp',3,'p_and_comp','CythonParser.py',412),
  ('and_comp -> empty','and_comp',1,'p_and_comp','CythonParser.py',413),
  ('not_test -> NOT not_test','not_test',2,'p_not_test','CythonParser.py',425),
  ('not_test -> comparison','not_test',1,'p_not_test','CythonParser.py',426),
  ('comparison -> expression comphelper','comparison',2,'p_comparison','CythonParser.py',442),
  ('comphelper -> comp_op expression comphelper','comphelper',3,'p_comparisonhelper','CythonParser.py',450),
  ('comphelper -> empty','comphelper',1,'p_comparisonhelper','CythonParser.py',451),
  ('comp_op -> LESS_THAN','comp_op',1,'p_comp_op','CythonParser.py',460),
  ('comp_op -> MORE_THAN','comp_op',1,'p_comp_op','CythonParser.py',461),
  ('comp_op -> EQUALS','comp_op',1,'p_comp_op','CythonParser.py',462),
  ('comp_op -> MORE_EQUAL','comp_op',1,'p_comp_op','CythonParser.py',463),
  ('comp_op -> LESS_EQUAL','comp_op',1,'p_comp_op','CythonParser.py',464),
  ('comp_op -> NOT_EQUAL','comp_op',1,'p_comp_op','CythonParser.py',465),
  ('comp_op -> IN','comp_op',1,'p_comp_op','CythonParser.py',466),
  ('comp_op -> NOT_IN','comp_op',1,'p_comp_op','CythonParser.py',467),
  ('comp_op -> IS','comp_op',1,'p_comp_op','CythonParser.py',468),
  ('comp_op -> IS_NOT','comp_op',1,'p_comp_op','CythonParser.py',469),
  ('expression -> arith_expr','expression',1,'p_Expression','CythonParser.py',484),
  ('arith_expr -> term PLUS arith_expr','arith_expr',3,'p_Arythmetic_expressions','CythonParser.py',494),
  ('arith_expr -> term MINUS arith_expr','arith_expr',3,'p_Arythmetic_expressions','CythonParser.py',495),
  ('arith_expr -> term empty','arith_expr',2,'p_Arythmetic_expressions','CythonParser.py',496),
  ('term -> factor TIMES term','term',3,'p_Term','CythonParser.py',512),
  ('term -> factor DIVIDE term','term',3,'p_Term','CythonParser.py',513),
  ('term -> factor MODULE term','term',3,'p_Term','CythonParser.py',514),
  ('term -> factor empty','term',2,'p_Term','CythonParser.py',515),
  ('factor -> LPAREN MINUS factor RPAREN','factor',4,'p_factor','CythonParser.py',534),
  ('factor -> power','factor',1,'p_factor','CythonParser.py',535),
  ('power -> factor POWER factor','power',3,'p_power','CythonParser.py',549),
  ('power -> atom_expr empty','power',2,'p_power','CythonParser.py',550),
  ('atom_expr -> atom','atom_expr',1,'p_atom_expr','CythonParser.py',569),
  ('atom -> ID','atom',1,'p_atom','CythonParser.py',575),
  ('atom -> NUMBER','atom',1,'p_atom','CythonParser.py',576),
  ('atom -> STRING','atom',1,'p_atom','CythonParser.py',577),
  ('atom -> BOOL_TRUE','atom',1,'p_atom','CythonParser.py',578),
  ('atom -> BOOL_FALSE','atom',1,'p_atom','CythonParser.py',579),
  ('atom -> NONE','atom',1,'p_atom','CythonParser.py',580),
  ('empty -> <empty>','empty',0,'p_empty','CythonParser.py',618),
]
